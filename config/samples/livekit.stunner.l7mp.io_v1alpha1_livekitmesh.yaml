apiVersion: livekit.stunner.l7mp.io/v1alpha1
kind: LiveKitMesh
metadata:
  labels:
    app.kubernetes.io/name: livekitmesh
    app.kubernetes.io/instance: livekitmesh-sample
    app.kubernetes.io/part-of: livekit-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: livekit-operator
  name: livekitmesh-sample
  namespace: default
spec:
  components:
    liveKit:
      deployment:
        replicas: 1 #opt
        config:
          keys:
            access_token: secretsecretsecretsecretsecretsecret
          log_level: debug
          port: 7880
#          redis:
#            address: redis.default.svc:6379
          rtc:
            port_range_end: 60000
            port_range_start: 50000
            tcp_port: 7801
            # TODO remove turn_servers somehow
            turn_servers:
              - host: ""
            use_external_ip: false
#        configMap:
#          namespace: default
#          name: default-livekit-config
        # container template
        container:
          image: livekit/livekit-server:v1.4.2
          imagePullPolicy: Always
          args: ["--disable-strict-config"]
          #          command: # TODO
          #          env: # TODO
          terminationGracePeriodSeconds: 3600
          #          affinity: # TODO
          resources:
            limits:
              cpu: 2
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 128Mi
    applicationExpose:
      hostName: livekit.stunner.cc
      externalDNS:
        cloudFlare:
          token: <token>
          email: info@l7mp.io
      certManager:
        issuer:
          apiToken: <token>
          challengeSolver: cloudflare
          email: info@l7mp.io

    stunner:
      gatewayConfig:
        realm: stunner.l7mp.io
        authType: static
        userName: "username"
        password: "password"
      gatewayListeners:
        - name: udp-listener
          port: 3478
          protocol: TURN-UDP

#      service:
#          name: lk-control
#          type: LoadBalancer
#          ports:
#            - port: 1
#              protocol: TCP
#            - port: 2
#              protocol: TCP
  #
  #
  #
  #
  #
  #
  #    scaling:
  #    #TODO
  #    ingress:
  #    #TODO
  #    egress:
  #    #TODO

  #    monitoring:
  #    #TODO
