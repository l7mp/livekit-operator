---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: livekitmeshes.livekit.stunner.l7mp.io
spec:
  group: livekit.stunner.l7mp.io
  names:
    kind: LiveKitMesh
    listKind: LiveKitMeshList
    plural: livekitmeshes
    singular: livekitmesh
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LiveKitMesh is the Schema for the livekitmeshes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LiveKitMeshSpec defines the desired state of LiveKitMesh
            properties:
              components:
                properties:
                  applicationExpose:
                    description: ApplicationExpose is the component that contains
                      all required subcomponents that are accountable for exposing
                      the application to the internet on a secure, encrypted way.
                      This includes the Cert-manager, Envoy GW, and ExternalDns.
                    properties:
                      certManager:
                        description: CertManager will obtain certificates from a variety
                          of Issuers, both popular public Issuers and private Issuers,
                          and ensure the certificates are valid and up-to-date, and
                          will attempt to renew certificates at a configured time
                          before expiry.
                        properties:
                          issuer:
                            description: Issuer holds the necessary configuration
                              about the used Issuer
                            properties:
                              apiToken:
                                description: ApiToken is the API token for the CloudFlare
                                  account that owns the challenged DnsZone
                                type: string
                              challengeSolver:
                                description: ChallengeSolver Used to configure a DNS01
                                  challenge provider to be used when solving DNS01
                                  challenges.
                                enum:
                                - cloudflare
                                - route53
                                - clouddns
                                - digitalocean
                                - azuredns
                                type: string
                              email:
                                description: Email is the email address to be associated
                                  with the ACME account. This field is optional, but
                                  it is strongly recommended to be set. It will be
                                  used to contact you in case of issues with your
                                  account or certificates, including expiry notification
                                  emails. This field may be updated after the account
                                  is initially registered.
                                type: string
                            required:
                            - apiToken
                            - challengeSolver
                            type: object
                        type: object
                      hostName:
                        description: HostName is the DNS host name that will be used
                          by both cert-manager and Envoy GW. DnsZone Certificate requests
                          will be issues against this HostName. This ChallengeSolver
                          will use this to solve the challenge.
                        type: string
                    required:
                    - hostName
                    type: object
                  egress:
                    description: LiveKit's Egress resource descriptor. Egress makes
                      it possible to stream a single user's or any number of users'
                      streams out of a room onto an RTMP port.
                    type: object
                  ingress:
                    description: LiveKit's Ingress resource descriptor. This resource
                      makes it possible to stream videos(prerecorded or live) into
                      the Kubernetes cluster and further into a chosen room. Note
                      that this resource enables a one-way communication between the
                      client and the media server.
                    type: object
                  liveKit:
                    description: LiveKit is the main resource that the operator manages.
                      By default, it supports only the LiveKit server as a media server
                      but in the future it might support other media servers as well.
                    properties:
                      deployment:
                        description: Deployment holds the configuration for the future
                          Deployment manifest that will be created by the operator.
                        properties:
                          config:
                            properties:
                              keys:
                                properties:
                                  access_token:
                                    type: string
                                type: object
                              log_level:
                                type: string
                              port:
                                type: integer
                              redis:
                                description: Redis holds the configuration for the
                                  Redis deployment If the field is configured, no
                                  redis will be created by the operator, in this case
                                  user deployed Redis deployment is required If it
                                  is omitted, a default Redis will be created.
                                properties:
                                  address:
                                    type: string
                                type: object
                              rtc:
                                properties:
                                  port_range_end:
                                    type: integer
                                  port_range_start:
                                    type: integer
                                  stun_servers:
                                    items:
                                      type: string
                                    type: array
                                  tcp_port:
                                    type: integer
                                  turn_servers:
                                    items:
                                      properties:
                                        credential:
                                          type: string
                                        host:
                                          type: string
                                        port:
                                          type: integer
                                        protocol:
                                          type: string
                                        uri:
                                          type: string
                                        username:
                                          type: string
                                      type: object
                                    type: array
                                  use_external_ip:
                                    default: false
                                    type: boolean
                                type: object
                            type: object
                          configMap:
                            description: ConfigMap holds the configuration for the
                              livekit server that is executed. TODO in the future
                              we should make a copy from the configmap into the namespace
                              the lkmesh was deployed to
                            properties:
                              name:
                                description: Name is the name of the configMap resource
                                type: string
                              namespace:
                                description: Namespace is the namespace of the configMap
                                  resource
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          container:
                            description: Container template for the containers created
                              in each Pod in the replicaset. If omitted the default
                              template will be used. Which spawns a single container
                              TODO
                            properties:
                              affinity:
                                description: Scheduling constraints.
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          affinity expressions specified by this field,
                                          but it may choose a node that violates one
                                          or more of the expressions. The node that
                                          is most preferred is the one with the greatest
                                          sum of weights, i.e. for each node that
                                          meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if
                                          the node matches the corresponding matchExpressions;
                                          the node(s) with the highest sum are the
                                          most preferred.
                                        items:
                                          description: An empty preferred scheduling
                                            term matches all objects with implicit
                                            weight 0 (i.e. it's a no-op). A null preferred
                                            scheduling term matches no objects (i.e.
                                            is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            weight:
                                              description: Weight associated with
                                                matching the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - preference
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to an update),
                                          the system may or may not try to eventually
                                          evict the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node
                                              selector terms. The terms are ORed.
                                            items:
                                              description: A null or empty node selector
                                                term matches no objects. The requirements
                                                of them are ANDed. The TopologySelectorTerm
                                                type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                        required:
                                        - nodeSelectorTerms
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling
                                      rules (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          affinity expressions specified by this field,
                                          but it may choose a node that violates one
                                          or more of the expressions. The node that
                                          is most preferred is the one with the greatest
                                          sum of weights, i.e. for each node that
                                          meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if
                                          the node has pods which matches the corresponding
                                          podAffinityTerm; the node(s) with the highest
                                          sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods. If it's null, this PodAffinityTerm
                                                    matches with no Pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                matchLabelKeys:
                                                  description: MatchLabelKeys is a
                                                    set of pod label keys to select
                                                    which pods will be taken into
                                                    consideration. The keys are used
                                                    to lookup values from the incoming
                                                    pod labels, those key-value labels
                                                    are merged with `LabelSelector`
                                                    as `key in (value)` to select
                                                    the group of existing pods which
                                                    pods will be taken into consideration
                                                    for the incoming pod's pod (anti)
                                                    affinity. Keys that don't exist
                                                    in the incoming pod labels will
                                                    be ignored. The default value
                                                    is empty. The same key is forbidden
                                                    to exist in both MatchLabelKeys
                                                    and LabelSelector. Also, MatchLabelKeys
                                                    cannot be set when LabelSelector
                                                    isn't set. This is an alpha field
                                                    and requires enabling MatchLabelKeysInPodAffinity
                                                    feature gate.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                mismatchLabelKeys:
                                                  description: MismatchLabelKeys is
                                                    a set of pod label keys to select
                                                    which pods will be taken into
                                                    consideration. The keys are used
                                                    to lookup values from the incoming
                                                    pod labels, those key-value labels
                                                    are merged with `LabelSelector`
                                                    as `key notin (value)` to select
                                                    the group of existing pods which
                                                    pods will be taken into consideration
                                                    for the incoming pod's pod (anti)
                                                    affinity. Keys that don't exist
                                                    in the incoming pod labels will
                                                    be ignored. The default value
                                                    is empty. The same key is forbidden
                                                    to exist in both MismatchLabelKeys
                                                    and LabelSelector. Also, MismatchLabelKeys
                                                    cannot be set when LabelSelector
                                                    isn't set. This is an alpha field
                                                    and requires enabling MatchLabelKeysInPodAffinity
                                                    feature gate.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with
                                                matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to a pod
                                          label update), the system may or may not
                                          try to eventually evict the pod from its
                                          node. When there are multiple elements,
                                          the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all
                                          terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods. If
                                                it's null, this PodAffinityTerm matches
                                                with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: MatchLabelKeys is a set
                                                of pod label keys to select which
                                                pods will be taken into consideration.
                                                The keys are used to lookup values
                                                from the incoming pod labels, those
                                                key-value labels are merged with `LabelSelector`
                                                as `key in (value)` to select the
                                                group of existing pods which pods
                                                will be taken into consideration for
                                                the incoming pod's pod (anti) affinity.
                                                Keys that don't exist in the incoming
                                                pod labels will be ignored. The default
                                                value is empty. The same key is forbidden
                                                to exist in both MatchLabelKeys and
                                                LabelSelector. Also, MatchLabelKeys
                                                cannot be set when LabelSelector isn't
                                                set. This is an alpha field and requires
                                                enabling MatchLabelKeysInPodAffinity
                                                feature gate.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: MismatchLabelKeys is a
                                                set of pod label keys to select which
                                                pods will be taken into consideration.
                                                The keys are used to lookup values
                                                from the incoming pod labels, those
                                                key-value labels are merged with `LabelSelector`
                                                as `key notin (value)` to select the
                                                group of existing pods which pods
                                                will be taken into consideration for
                                                the incoming pod's pod (anti) affinity.
                                                Keys that don't exist in the incoming
                                                pod labels will be ignored. The default
                                                value is empty. The same key is forbidden
                                                to exist in both MismatchLabelKeys
                                                and LabelSelector. Also, MismatchLabelKeys
                                                cannot be set when LabelSelector isn't
                                                set. This is an alpha field and requires
                                                enabling MatchLabelKeysInPodAffinity
                                                feature gate.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          anti-affinity expressions specified by this
                                          field, but it may choose a node that violates
                                          one or more of the expressions. The node
                                          that is most preferred is the one with the
                                          greatest sum of weights, i.e. for each node
                                          that meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          anti-affinity expressions, etc.), compute
                                          a sum by iterating through the elements
                                          of this field and adding "weight" to the
                                          sum if the node has pods which matches the
                                          corresponding podAffinityTerm; the node(s)
                                          with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods. If it's null, this PodAffinityTerm
                                                    matches with no Pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                matchLabelKeys:
                                                  description: MatchLabelKeys is a
                                                    set of pod label keys to select
                                                    which pods will be taken into
                                                    consideration. The keys are used
                                                    to lookup values from the incoming
                                                    pod labels, those key-value labels
                                                    are merged with `LabelSelector`
                                                    as `key in (value)` to select
                                                    the group of existing pods which
                                                    pods will be taken into consideration
                                                    for the incoming pod's pod (anti)
                                                    affinity. Keys that don't exist
                                                    in the incoming pod labels will
                                                    be ignored. The default value
                                                    is empty. The same key is forbidden
                                                    to exist in both MatchLabelKeys
                                                    and LabelSelector. Also, MatchLabelKeys
                                                    cannot be set when LabelSelector
                                                    isn't set. This is an alpha field
                                                    and requires enabling MatchLabelKeysInPodAffinity
                                                    feature gate.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                mismatchLabelKeys:
                                                  description: MismatchLabelKeys is
                                                    a set of pod label keys to select
                                                    which pods will be taken into
                                                    consideration. The keys are used
                                                    to lookup values from the incoming
                                                    pod labels, those key-value labels
                                                    are merged with `LabelSelector`
                                                    as `key notin (value)` to select
                                                    the group of existing pods which
                                                    pods will be taken into consideration
                                                    for the incoming pod's pod (anti)
                                                    affinity. Keys that don't exist
                                                    in the incoming pod labels will
                                                    be ignored. The default value
                                                    is empty. The same key is forbidden
                                                    to exist in both MismatchLabelKeys
                                                    and LabelSelector. Also, MismatchLabelKeys
                                                    cannot be set when LabelSelector
                                                    isn't set. This is an alpha field
                                                    and requires enabling MatchLabelKeysInPodAffinity
                                                    feature gate.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with
                                                matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the anti-affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the anti-affinity requirements
                                          specified by this field cease to be met
                                          at some point during pod execution (e.g.
                                          due to a pod label update), the system may
                                          or may not try to eventually evict the pod
                                          from its node. When there are multiple elements,
                                          the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all
                                          terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods. If
                                                it's null, this PodAffinityTerm matches
                                                with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: MatchLabelKeys is a set
                                                of pod label keys to select which
                                                pods will be taken into consideration.
                                                The keys are used to lookup values
                                                from the incoming pod labels, those
                                                key-value labels are merged with `LabelSelector`
                                                as `key in (value)` to select the
                                                group of existing pods which pods
                                                will be taken into consideration for
                                                the incoming pod's pod (anti) affinity.
                                                Keys that don't exist in the incoming
                                                pod labels will be ignored. The default
                                                value is empty. The same key is forbidden
                                                to exist in both MatchLabelKeys and
                                                LabelSelector. Also, MatchLabelKeys
                                                cannot be set when LabelSelector isn't
                                                set. This is an alpha field and requires
                                                enabling MatchLabelKeysInPodAffinity
                                                feature gate.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: MismatchLabelKeys is a
                                                set of pod label keys to select which
                                                pods will be taken into consideration.
                                                The keys are used to lookup values
                                                from the incoming pod labels, those
                                                key-value labels are merged with `LabelSelector`
                                                as `key notin (value)` to select the
                                                group of existing pods which pods
                                                will be taken into consideration for
                                                the incoming pod's pod (anti) affinity.
                                                Keys that don't exist in the incoming
                                                pod labels will be ignored. The default
                                                value is empty. The same key is forbidden
                                                to exist in both MismatchLabelKeys
                                                and LabelSelector. Also, MismatchLabelKeys
                                                cannot be set when LabelSelector isn't
                                                set. This is an alpha field and requires
                                                enabling MatchLabelKeysInPodAffinity
                                                feature gate.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              args:
                                description: Arguments to the entrypoint.
                                items:
                                  type: string
                                type: array
                              command:
                                description: Entrypoint array.
                                items:
                                  type: string
                                type: array
                              env:
                                description: List of environment variables to set
                                  in the stunnerd container.
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              healthCheckPort:
                                description: If specified, the health-check port.
                                type: integer
                              hostNetwork:
                                default: false
                                description: Host networking requested for the stunnerd
                                  pod to use the host's network namespace. Can be
                                  used to implement public TURN servers with Kubernetes.  Defaults
                                  to false.
                                type: boolean
                              image:
                                description: Container image name.
                                type: string
                              imagePullPolicy:
                                description: Image pull policy. One of Always, Never,
                                  IfNotPresent.
                                type: string
                              resources:
                                description: Resources required by stunnerd.
                                properties:
                                  claims:
                                    description: "Claims lists the names of resources,
                                      defined in spec.resourceClaims, that are used
                                      by this container. \n This is an alpha field
                                      and requires enabling the DynamicResourceAllocation
                                      feature gate. \n This field is immutable. It
                                      can only be set for containers."
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: Name must match the name of
                                            one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes
                                            that resource available inside a container.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. Requests cannot
                                      exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              securityContext:
                                description: SecurityContext holds pod-level security
                                  attributes and common container settings.
                                properties:
                                  fsGroup:
                                    description: "A special supplemental group that
                                      applies to all containers in a pod. Some volume
                                      types allow the Kubelet to change the ownership
                                      of that volume to be owned by the pod: \n 1.
                                      The owning GID will be the FSGroup 2. The setgid
                                      bit is set (new files created in the volume
                                      will be owned by FSGroup) 3. The permission
                                      bits are OR'd with rw-rw---- \n If unset, the
                                      Kubelet will not modify the ownership and permissions
                                      of any volume. Note that this field cannot be
                                      set when spec.os.name is windows."
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: 'fsGroupChangePolicy defines behavior
                                      of changing ownership and permission of the
                                      volume before being exposed inside Pod. This
                                      field will only apply to volume types which
                                      support fsGroup based ownership(and permissions).
                                      It will have no effect on ephemeral volume types
                                      such as: secret, configmaps and emptydir. Valid
                                      values are "OnRootMismatch" and "Always". If
                                      not specified, "Always" is used. Note that this
                                      field cannot be set when spec.os.name is windows.'
                                    type: string
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in SecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence for that container. Note that this
                                      field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in SecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in SecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence for that
                                      container. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to all containers. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in SecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence for that container. Note that this
                                      field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by the
                                      containers in this pod. Note that this field
                                      cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must be set if
                                          type is "Localhost". Must NOT be set for
                                          any other type.
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  supplementalGroups:
                                    description: A list of groups applied to the first
                                      process run in each container, in addition to
                                      the container's primary GID, the fsGroup (if
                                      specified), and group memberships defined in
                                      the container image for the uid of the container
                                      process. If unspecified, no additional groups
                                      are added to any container. Note that group
                                      memberships defined in the container image for
                                      the uid of the container process are still effective,
                                      even if they are not included in this list.
                                      Note that this field cannot be set when spec.os.name
                                      is windows.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  sysctls:
                                    description: Sysctls hold a list of namespaced
                                      sysctls used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might fail
                                      to launch. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      within a container's SecurityContext will be
                                      used. If set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          All of a Pod's containers must have the
                                          same effective HostProcess value (it is
                                          not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).
                                          In addition, if HostProcess is true then
                                          HostNetwork must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the stunnerd
                                  needs to terminate gracefully. Defaults to 3600
                                  seconds.
                                format: int64
                                type: integer
                              tolerations:
                                description: If specified, the pod's tolerations.
                                items:
                                  description: The pod this Toleration is attached
                                    to tolerates any taint that matches the triple
                                    <key,value,effect> using the matching operator
                                    <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values
                                        and all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must
                                        be of effect NoExecute, otherwise this field
                                        is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint
                                        forever (do not evict). Zero and negative
                                        values will be treated as 0 (evict immediately)
                                        by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the
                                        value should be empty, otherwise just a regular
                                        string.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          name:
                            default: livekit-server
                            description: Name is the name of the Deployment that will
                              be created. Optional, if not filled default name 'livekit'
                              will be used Note that the same namespace will be used
                              as the CR was deployed into.
                            type: string
                          replicas:
                            description: Replicas Number of desired pods. This is
                              a pointer to distinguish between explicit zero and not
                              specified. Defaults to 1.
                            format: int32
                            type: integer
                        required:
                        - config
                        type: object
                      type:
                        default: livekit
                        enum:
                        - livekit
                        type: string
                    required:
                    - deployment
                    type: object
                  monitoring:
                    description: Monitoring enables the Prometheus metric exposition,
                      installs a Prometheus operator and Grafana operator with the
                      corresponding resources
                    type: object
                  stunner:
                    description: Stunner holds the configuration for the to-be created
                      STUNner resources. These resources provide the necessary resources
                      for a possible/successful TURN connection
                    properties:
                      gatewayConfig:
                        description: GatewayConfig is the configuration for the STUNner
                          deployment's GatewayConfig.spec object
                        properties:
                          authLifetime:
                            description: AuthLifetime defines the lifetime of "longterm"
                              authentication credentials in seconds.
                            format: int32
                            type: integer
                          authRef:
                            description: 'Note that externally set credentials override
                              any inline auth credentials (AuthType, AuthUsername,
                              etc.): if AuthRef is nonempty then it is expected that
                              the referenced Secret exists and *all* authentication
                              credentials are correctly set in the referenced Secret
                              (username/password or shared secret). Mixing of credential
                              sources (inline/external) is not supported.'
                            properties:
                              group:
                                default: ""
                                description: Group is the group of the referent. For
                                  example, "gateway.networking.k8s.io". When unspecified
                                  or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: "Namespace is the namespace of the referenced
                                  object. When unspecified, the local namespace is
                                  inferred. \n Note that when a namespace different
                                  than the local namespace is specified, a ReferenceGrant
                                  object is required in the referent namespace to
                                  allow that namespace's owner to accept the reference.
                                  See the ReferenceGrant documentation for details.
                                  \n Support: Core"
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          authType:
                            default: plaintext
                            description: AuthType is the type of the STUN/TURN authentication
                              mechanism.
                            pattern: ^plaintext|static|longterm|ephemeral|timewindowed$
                            type: string
                          dataplane:
                            default: default
                            description: Dataplane defines the dataplane (stunnerd
                              image, version, etc) for STUNner gateways using this
                              GatewayConfig.
                            type: string
                          loadBalancerServiceAnnotations:
                            additionalProperties:
                              type: string
                            description: "LoadBalancerServiceAnnotations is a list
                              of annotations that will go into the LoadBalancer services
                              created automatically by the operator to wrap Gateways.
                              \n NOTE: removing annotations from a GatewayConfig will
                              not result in the removal of the corresponding annotations
                              from the LoadBalancer service, in order to prevent the
                              accidental removal of an annotation installed there
                              by Kubernetes or the cloud provider. If you really want
                              to remove an annotation, do this manually or simply
                              remove all Gateways (which will remove the corresponding
                              LoadBalancer services), update the GatewayConfig and
                              then recreate the Gateways, so that the newly created
                              LoadBalancer services will contain the required annotations."
                            type: object
                          logLevel:
                            description: LogLevel specifies the default loglevel for
                              the STUNner daemon.
                            type: string
                          password:
                            description: Password defines the `password` credential
                              for "plaintext" authentication.
                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                            type: string
                          realm:
                            default: stunner.l7mp.io
                            description: "Realm defines the STUN/TURN authentication
                              realm to be used for clients toauthenticate with STUNner.
                              \n The realm must consist of lower case alphanumeric
                              characters or '-', and must start and end with an alphanumeric
                              character. No other punctuation is allowed."
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          sharedSecret:
                            description: SharedSecret defines the shared secret to
                              be used for "longterm" authentication.
                            type: string
                          userName:
                            description: Username defines the `username` credential
                              for "plaintext" authentication.
                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                            type: string
                        type: object
                      gatewayListeners:
                        description: GatewayListeners is the configuration of the
                          STUNner deployment's Gateway object
                        items:
                          description: Listener embodies the concept of a logical
                            endpoint where a Gateway accepts network connections.
                          properties:
                            allowedRoutes:
                              default:
                                namespaces:
                                  from: Same
                              description: "AllowedRoutes defines the types of routes
                                that MAY be attached to a Listener and the trusted
                                namespaces where those Route resources MAY be present.
                                \n Although a client request may match multiple route
                                rules, only one rule may ultimately receive the request.
                                Matching precedence MUST be determined in order of
                                the following criteria: \n * The most specific match
                                as defined by the Route type. * The oldest Route based
                                on creation timestamp. For example, a Route with a
                                creation timestamp of \"2020-09-08 01:02:03\" is given
                                precedence over a Route with a creation timestamp
                                of \"2020-09-08 01:02:04\". * If everything else is
                                equivalent, the Route appearing first in alphabetical
                                order (namespace/name) should be given precedence.
                                For example, foo/bar is given precedence over foo/baz.
                                \n All valid rules within a Route attached to this
                                Listener should be implemented. Invalid Route rules
                                can be ignored (sometimes that will mean the full
                                Route). If a Route rule transitions from valid to
                                invalid, support for that Route rule should be dropped
                                to ensure consistency. For example, even if a filter
                                specified by a Route rule is invalid, the rest of
                                the rules within that Route should still be supported.
                                \n Support: Core"
                              properties:
                                kinds:
                                  description: "Kinds specifies the groups and kinds
                                    of Routes that are allowed to bind to this Gateway
                                    Listener. When unspecified or empty, the kinds
                                    of Routes selected are determined using the Listener
                                    protocol. \n A RouteGroupKind MUST correspond
                                    to kinds of Routes that are compatible with the
                                    application protocol specified in the Listener's
                                    Protocol field. If an implementation does not
                                    support or recognize this resource type, it MUST
                                    set the \"ResolvedRefs\" condition to False for
                                    this Listener with the \"InvalidRouteKinds\" reason.
                                    \n Support: Core"
                                  items:
                                    description: RouteGroupKind indicates the group
                                      and kind of a Route resource.
                                    properties:
                                      group:
                                        default: gateway.networking.k8s.io
                                        description: Group is the group of the Route.
                                        maxLength: 253
                                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      kind:
                                        description: Kind is the kind of the Route.
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                        type: string
                                    required:
                                    - kind
                                    type: object
                                  maxItems: 8
                                  type: array
                                namespaces:
                                  default:
                                    from: Same
                                  description: "Namespaces indicates namespaces from
                                    which Routes may be attached to this Listener.
                                    This is restricted to the namespace of this Gateway
                                    by default. \n Support: Core"
                                  properties:
                                    from:
                                      default: Same
                                      description: "From indicates where Routes will
                                        be selected for this Gateway. Possible values
                                        are: \n * All: Routes in all namespaces may
                                        be used by this Gateway. * Selector: Routes
                                        in namespaces selected by the selector may
                                        be used by this Gateway. * Same: Only Routes
                                        in the same namespace may be used by this
                                        Gateway. \n Support: Core"
                                      enum:
                                      - All
                                      - Selector
                                      - Same
                                      type: string
                                    selector:
                                      description: "Selector must be specified when
                                        From is set to \"Selector\". In that case,
                                        only Routes in Namespaces matching this Selector
                                        will be selected by this Gateway. This field
                                        is ignored for other values of \"From\". \n
                                        Support: Core"
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                              type: object
                            hostname:
                              description: "Hostname specifies the virtual hostname
                                to match for protocol types that define this concept.
                                When unspecified, all hostnames are matched. This
                                field is ignored for protocols that don't require
                                hostname based matching. \n Implementations MUST apply
                                Hostname matching appropriately for each of the following
                                protocols: \n * TLS: The Listener Hostname MUST match
                                the SNI. * HTTP: The Listener Hostname MUST match
                                the Host header of the request. * HTTPS: The Listener
                                Hostname SHOULD match at both the TLS and HTTP protocol
                                layers as described above. If an implementation does
                                not ensure that both the SNI and Host header match
                                the Listener hostname, it MUST clearly document that.
                                \n For HTTPRoute and TLSRoute resources, there is
                                an interaction with the `spec.hostnames` array. When
                                both listener and route specify hostnames, there MUST
                                be an intersection between the values for a Route
                                to be accepted. For more information, refer to the
                                Route specific Hostnames documentation. \n Hostnames
                                that are prefixed with a wildcard label (`*.`) are
                                interpreted as a suffix match. That means that a match
                                for `*.example.com` would match both `test.example.com`,
                                and `foo.test.example.com`, but not `example.com`.
                                \n Support: Core"
                              maxLength: 253
                              minLength: 1
                              pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            name:
                              description: "Name is the name of the Listener. This
                                name MUST be unique within a Gateway. \n Support:
                                Core"
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            port:
                              description: "Port is the network port. Multiple listeners
                                may use the same port, subject to the Listener compatibility
                                rules. \n Support: Core"
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            protocol:
                              description: "Protocol specifies the network protocol
                                this listener expects to receive. \n Support: Core"
                              maxLength: 255
                              minLength: 1
                              pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                              type: string
                            tls:
                              description: "TLS is the TLS configuration for the Listener.
                                This field is required if the Protocol field is \"HTTPS\"
                                or \"TLS\". It is invalid to set this field if the
                                Protocol field is \"HTTP\", \"TCP\", or \"UDP\". \n
                                The association of SNIs to Certificate defined in
                                GatewayTLSConfig is defined based on the Hostname
                                field for this listener. \n The GatewayClass MUST
                                use the longest matching SNI out of all available
                                certificates for any TLS handshake. \n Support: Core"
                              properties:
                                certificateRefs:
                                  description: "CertificateRefs contains a series
                                    of references to Kubernetes objects that contains
                                    TLS certificates and private keys. These certificates
                                    are used to establish a TLS handshake for requests
                                    that match the hostname of the associated listener.
                                    \n A single CertificateRef to a Kubernetes Secret
                                    has \"Core\" support. Implementations MAY choose
                                    to support attaching multiple certificates to
                                    a Listener, but this behavior is implementation-specific.
                                    \n References to a resource in different namespace
                                    are invalid UNLESS there is a ReferenceGrant in
                                    the target namespace that allows the certificate
                                    to be attached. If a ReferenceGrant does not allow
                                    this reference, the \"ResolvedRefs\" condition
                                    MUST be set to False for this listener with the
                                    \"RefNotPermitted\" reason. \n This field is required
                                    to have at least one element when the mode is
                                    set to \"Terminate\" (default) and is optional
                                    otherwise. \n CertificateRefs can reference to
                                    standard Kubernetes resources, i.e. Secret, or
                                    implementation-specific custom resources. \n Support:
                                    Core - A single reference to a Kubernetes Secret
                                    of type kubernetes.io/tls \n Support: Implementation-specific
                                    (More than one reference or other resource types)"
                                  items:
                                    description: "SecretObjectReference identifies
                                      an API object including its namespace, defaulting
                                      to Secret. \n The API object must be valid in
                                      the cluster; the Group and Kind must be registered
                                      in the cluster for this reference to be valid.
                                      \n References to objects with invalid Group
                                      and Kind are not valid, and must be rejected
                                      by the implementation, with appropriate Conditions
                                      set on the containing object."
                                    properties:
                                      group:
                                        default: ""
                                        description: Group is the group of the referent.
                                          For example, "gateway.networking.k8s.io".
                                          When unspecified or empty string, core API
                                          group is inferred.
                                        maxLength: 253
                                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      kind:
                                        default: Secret
                                        description: Kind is kind of the referent.
                                          For example "Secret".
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                        type: string
                                      name:
                                        description: Name is the name of the referent.
                                        maxLength: 253
                                        minLength: 1
                                        type: string
                                      namespace:
                                        description: "Namespace is the namespace of
                                          the referenced object. When unspecified,
                                          the local namespace is inferred. \n Note
                                          that when a namespace different than the
                                          local namespace is specified, a ReferenceGrant
                                          object is required in the referent namespace
                                          to allow that namespace's owner to accept
                                          the reference. See the ReferenceGrant documentation
                                          for details. \n Support: Core"
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  maxItems: 64
                                  type: array
                                mode:
                                  default: Terminate
                                  description: "Mode defines the TLS behavior for
                                    the TLS session initiated by the client. There
                                    are two possible modes: \n - Terminate: The TLS
                                    session between the downstream client and the
                                    Gateway is terminated at the Gateway. This mode
                                    requires certificateRefs to be set and contain
                                    at least one element. - Passthrough: The TLS session
                                    is NOT terminated by the Gateway. This implies
                                    that the Gateway can't decipher the TLS stream
                                    except for the ClientHello message of the TLS
                                    protocol. CertificateRefs field is ignored in
                                    this mode. \n Support: Core"
                                  enum:
                                  - Terminate
                                  - Passthrough
                                  type: string
                                options:
                                  additionalProperties:
                                    description: AnnotationValue is the value of an
                                      annotation in Gateway API. This is used for
                                      validation of maps such as TLS options. This
                                      roughly matches Kubernetes annotation validation,
                                      although the length validation in that case
                                      is based on the entire size of the annotations
                                      struct.
                                    maxLength: 4096
                                    minLength: 0
                                    type: string
                                  description: "Options are a list of key/value pairs
                                    to enable extended TLS configuration for each
                                    implementation. For example, configuring the minimum
                                    TLS version or supported cipher suites. \n A set
                                    of common keys MAY be defined by the API in the
                                    future. To avoid any ambiguity, implementation-specific
                                    definitions MUST use domain-prefixed names, such
                                    as `example.com/my-custom-option`. Un-prefixed
                                    names are reserved for key names defined by Gateway
                                    API. \n Support: Implementation-specific"
                                  maxProperties: 16
                                  type: object
                              type: object
                              x-kubernetes-validations:
                              - message: certificateRefs must be specified when TLSModeType
                                  is Terminate
                                rule: 'self.mode == ''Terminate'' ? size(self.certificateRefs)
                                  > 0 : true'
                          required:
                          - name
                          - port
                          - protocol
                          type: object
                        type: array
                    required:
                    - gatewayConfig
                    - gatewayListeners
                    type: object
                required:
                - applicationExpose
                - liveKit
                type: object
            required:
            - components
            type: object
          status:
            description: LiveKitMeshStatus defines the observed state of LiveKitMesh
            properties:
              componentStatus:
                additionalProperties:
                  description: 'InstallStatus is the status of the component. Enum
                    with the following possible values: -NONE meaning the component
                    is not present -UPDATING meaning the component is being updated
                    to a different version -RECONCILING meaning the controller has
                    started but not yet completed reconciliation loop for the component
                    -HEALTHY meaning the component is healthy -ERROR meaning a critical
                    error happened to the component -ACTION_REQUIRED meaning there
                    is a user action needed in order to proceed'
                  enum:
                  - NONE
                  - UPDATING
                  - RECONCILING
                  - HEALTHY
                  - ERROR
                  - ACTION_REQUIRED
                  type: string
                description: ComponentStatus is a key-value store to signal the components'
                  status after installation The map will give a brief overview for
                  the user which component was successful or failed etc. THE FIELD
                  IS POPULATED BY THE OPERATOR NOT BY THE USER. IT WILL BE OVERWRITTEN
                type: object
              configStatus:
                description: ConfigStatus holds the current configuration for the
                  LiveKit component if it is available in the cluster. nil meaning
                  the ConfigMap provided is not present.
                type: string
              overallStatus:
                description: "OverallStatus of all components controlled by the operator.
                  \n * If all components have status `NONE`, overall status is `NONE`.
                  * If all components are `HEALTHY`, overall status is `HEALTHY`.
                  * If one or more components are `RECONCILING` and others are `HEALTHY`,
                  overall status is `RECONCILING`. * If one or more components are
                  `UPDATING` and others are `HEALTHY`, overall status is `UPDATING`.
                  * If components are a mix of `RECONCILING`, `UPDATING` and `HEALTHY`,
                  overall status is `UPDATING`. * If any component is in `ERROR` state,
                  overall status is `ERROR`. * If further action is needed for reconciliation
                  to proceed, overall status is `ACTION_REQUIRED`."
                enum:
                - NONE
                - UPDATING
                - RECONCILING
                - HEALTHY
                - ERROR
                - ACTION_REQUIRED
                type: string
            required:
            - componentStatus
            - configStatus
            - overallStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
